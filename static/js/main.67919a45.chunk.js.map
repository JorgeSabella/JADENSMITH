{"version":3,"sources":["store/actions/index.js","store/reducers/reducer_posts.js","store/actions/dataActions.js","store/reducers/reducer_data.js","store/reducers/index.js","components/layout/Navbar.js","components/dashboard/Home.js","components/dashboard/ViewExams.js","components/exams/NewExam.js","components/exams/Question.js","components/exams/EditQuestion.js","components/exams/EditExam.js","components/exams/ExamQuestions.js","components/exams/ListQuestions.js","App.js","serviceWorker.js","index.js"],"names":["FETCH_SUBJECTS","FETCH_SUBJECT","CREATE_SUBJECT","FETCH_QUESTIONS","FETCH_EXAM","CREATE_QUESTION","CREATE_EXAM","UPDATE_EXAM","DELETE_EXAM","FETCH_EXAMS","DELETE_QUESTION","ROOT","fetchSubjects","request","axios","get","concat","type","payload","EXAM_DATA","QUESTION_DATA","sendQuestionData","data","rootReducer","combineReducers","posts","state","arguments","length","undefined","action","_","mapKeys","questions","form","formReducer","Navbar","react_default","a","createElement","className","href","data-target","id","src","react_router_dom","to","Home","width","height","frameBorder","allow","allowFullScreen","Exams","this","props","fetchExams","post","sendExamData","e","exam_id","console","log","deleteExam","window","location","reload","_this","map","key","name","onClick","sendData","clickDeleteExam","class","renderPosts","Component","connect","callback","delete","then","NewExam","field","label","Object","assign","input","values","body","exam","subject_id","document","getElementById","value","nombre","institution","institut","professor","profesor","createExam","history","push","_this$props","handleSubmit","onSubmit","bind","Field","component","renderField","option","text","reduxForm","validate","Question","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Choice","Open","TrueFalse","setState","pregunta","tipo","equation","ecuacion","variables","Variable1","high_num","Max","low_num","Min","answers_attributes","correct","createQuestion","body2","question","correcta","body3","checked","_this2","renderTextField","onChange","operation","renderRadioField","EditQuestion","qdata","initialValues","tema","EditExam","fetchSubject","question_id","event","index","options","target","elem","indexOf","splice","checked_questions","renderCheckbox","_this3","updateExam","renderQuestions","put","enableReinitialize","ExamQuestions","params","match","fetchExam","react_materialize_lib","header","icon","ListQuestions","fetchQuestions","deleteQuestion","sendQuestion","clickDelete","subject","createSubject","renderAllQuestions","App","layout_Navbar","react_router","path","exact","Boolean","hostname","createStoreWithMiddleware","applyMiddleware","promise","createStore","ReactDOM","render","es","store","reducers","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67919a45.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const FETCH_SUBJECTS = 'fetch_subjects';\r\nexport const FETCH_SUBJECT = 'fetch_subject';\r\nexport const CREATE_SUBJECT = 'create_subject';\r\nexport const FETCH_QUESTIONS = 'fetch_questions';\r\nexport const FETCH_EXAM = 'fetch_exam';\r\nexport const CREATE_QUESTION = 'create_question';\r\nexport const CREATE_EXAM = \"create_exam\";\r\nexport const UPDATE_EXAM = \"update_exam\";\r\nexport const DELETE_EXAM = 'delete_exam';\r\nexport const FETCH_EXAMS = 'fetch_exams';\r\nexport const DELETE_QUESTION = 'delete_question';\r\n\r\n//const ROOT_URL = 'https://jsonplaceholder.typicode.com'\r\nconst ROOT = 'https://mejorado.herokuapp.com'\r\n\r\nexport function fetchSubject(id) {\r\n    const request = axios.get(`${ROOT}/subjects/${id}`);\r\n    return {\r\n        type: FETCH_SUBJECT,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function fetchSubjects() {\r\n    const request = axios.get(`${ROOT}/subjects`);\r\n    return {\r\n        type: FETCH_SUBJECTS,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function createSubject(values, callback) {\r\n    const request = axios.post(`${ROOT}/subjects`, values).then(() => callback());\r\n    return {\r\n        type: CREATE_SUBJECT,\r\n        payload: request\r\n    };\r\n}\r\n\r\nexport function fetchQuestions() {\r\n    const request = axios.get(`${ROOT}/questions`);\r\n    return {\r\n        type: FETCH_QUESTIONS,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function createQuestion(values) {\r\n    const request = axios.post(`${ROOT}/questions`, values);\r\n    return {\r\n        type: CREATE_QUESTION,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function fetchExams() {\r\n    const request = axios.get(`${ROOT}/exams`);\r\n    return {\r\n        type: FETCH_EXAMS,\r\n        payload: request\r\n    };\r\n}\r\n\r\nexport function fetchExam(id) {\r\n    const request = axios.get(`${ROOT}/exams/${id}`);\r\n    return {\r\n        type: FETCH_EXAM,\r\n        payload: request\r\n    };\r\n}\r\n\r\nexport function createExam(values, callback) {\r\n    const request = axios.post(`${ROOT}/exams`, values).then(() => callback());\r\n    return {\r\n        type: CREATE_EXAM,\r\n        payload: request\r\n    };\r\n}\r\n\r\nexport function updateExam(values, id, callback) {\r\n    const request = axios.put(`${ROOT}/exams/${id}`, values).then(() => callback());\r\n    return {\r\n        type: UPDATE_EXAM,\r\n        payload: request\r\n    };\r\n}\r\n\r\nexport function deleteExam(id, callback) {\r\n    const request = axios.delete(`${ROOT}/exams/${id}`).then(() => callback());\r\n    return {\r\n        type: DELETE_EXAM,\r\n        payload: request\r\n    };\r\n}\r\n\r\nexport function deleteQuestion(id, callback) {\r\n    const request = axios.delete(`${ROOT}/questions/${id}`).then(() => callback());\r\n    return {\r\n        type: DELETE_QUESTION,\r\n        payload: request\r\n    };\r\n}","import _ from 'lodash';\r\nimport { \r\n    FETCH_SUBJECT,\r\n    FETCH_SUBJECTS, \r\n    QUESTION_DATA, \r\n    FETCH_EXAMS,\r\n    FETCH_EXAM,\r\n    FETCH_QUESTIONS\r\n} from '../actions/index';\r\n\r\nexport default function(state = {}, action) {\r\n    switch (action.type) {\r\n        case FETCH_QUESTIONS:\r\n            return _.mapKeys(action.payload.data, 'id');\r\n        case FETCH_SUBJECT:\r\n            return action.payload.data\r\n        case FETCH_SUBJECTS:\r\n            return _.mapKeys(action.payload.data, 'id');\r\n        case FETCH_EXAM:\r\n            return _.mapKeys(action.payload.data.questions, 'id');\r\n        case FETCH_EXAMS:\r\n            return _.mapKeys(action.payload.data, 'id');\r\n        default:\r\n            return state;\r\n    }\r\n}","export const EXAM_DATA = 'exam_data';\r\nexport const QUESTION_DATA = 'question_data';\r\n\r\nexport function sendExamData(data) {\r\n    return {\r\n        type: EXAM_DATA,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport function sendQuestionData(data) {\r\n    return {\r\n        type: QUESTION_DATA,\r\n        payload: data\r\n    }\r\n}","import { \r\n    EXAM_DATA, \r\n    QUESTION_DATA \r\n} from '../actions/dataActions';\r\n\r\nexport default function(state = {}, action) {\r\n    switch (action.type) {\r\n        case QUESTION_DATA:\r\n            return action.payload;\r\n        case EXAM_DATA:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport PostsReducer from './reducer_posts';\r\nimport DataReducer from './reducer_data';\r\n\r\nconst rootReducer = combineReducers({\r\n  posts: PostsReducer,\r\n  form: formReducer,\r\n  data: DataReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div>\r\n            <nav className=\"top-nav transparent z-depth-0\">\r\n                <div className=\"nav-wrapper\">\r\n                    <div className=\"container\">\r\n                        <a className=\"brand-logo left\" href=\"#\"><span className=\"black-text\">Jaden Smith</span></a>\r\n                        <a href=\"#!\" className=\"right\"><i className=\"large material-icons black-text\">help</i></a>\r\n                    </div>\r\n                </div>\r\n                <a className=\"top-nav sidenav-trigger full hide-on-large-only\" href=\"#\" data-target=\"slide-out\">\r\n                    <i className=\"material-icons white-text\">menu</i>\r\n                </a>\r\n            </nav>\r\n            <ul className=\"sidenav grey darken-4 sidenav-fixed z-depth-3\" id=\"slide-out\">\r\n                <li>\r\n                    <div className=\"user-view center\">\r\n                        <div>\r\n                            <img className=\"\" src=\"img/jaden.png\"/>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/\" className=\"white-text\">\r\n                        <i className=\"material-icons amber-text lighten-1\">home</i>Home\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/exams\" className=\"white-text\">\r\n                        <i className=\"material-icons amber-text lighten-1\">folder</i>Examenes\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/newexam\" className=\"white-text\">\r\n                        <i className=\"material-icons amber-text lighten-1\">edit</i>Nuevo Examen\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/question/list\" className=\"white-text\">\r\n                        <i className=\"material-icons amber-text lighten-1\">assignment</i>Preguntas\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/question\" className=\"white-text\"><i className=\"material-icons amber-text lighten-1\">add</i>Nueva Pregunta\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className = \"container\">\r\n            <div className=\"video-container\">\r\n            <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/UI6lqHOVHic\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n            </div>\r\n            <p className=\"flow-text\">\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent molestie, lectus at ultricies volutpat, metus diam ornare augue, ut porta magna mauris sit amet tellus. Suspendisse dictum leo ac convallis dapibus. Mauris eu leo iaculis, lobortis tellus vel, tempus dolor. Nam a dui sed mauris tincidunt lobortis suscipit in eros. Donec dictum mauris vitae velit vulputate tempor.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { fetchExams, deleteExam } from '../../store/actions/index';\r\nimport { sendExamData } from '../../store/actions/dataActions';\r\n\r\nclass Exams extends Component {\r\n    // componentWillMount() {\r\n    //     this.props.fetchExams();\r\n    // }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchExams();\r\n    }\r\n\r\n    sendData(post) {\r\n        this.props.sendExamData(post);\r\n    }\r\n\r\n    clickDeleteExam(e, exam_id) {\r\n        console.log(\"exam id\", exam_id)\r\n        this.props.deleteExam(exam_id, () => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    renderPosts() {\r\n        const { posts } = this.props;\r\n        if(posts) {\r\n            return _.map(posts, post=> {\r\n                return (\r\n                    <div className=\"col s12 m6 l4\" key={post.id}>\r\n                        <div className=\"card hoverable\">\r\n                            <div className=\"card-image\">\r\n                                <img src=\"img/exam.png\"></img>\r\n                                <span className=\"card-title black-text\">{post.name}</span>\r\n                                <NavLink to=\"/exam/edit\" className=\"white-text\">\r\n                                    <a className=\"btn-floating halfway-fab waves-effect waves-light blue darken-3\"\r\n                                    onClick={() => this.sendData(post)}\r\n                                    >\r\n                                        <i className=\"material-icons\">edit</i>\r\n                                    </a>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                <p>I am a very simple card. I am good at containing small bits of information.\r\n                                    I am convenient because I require little markup to use effectively.\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"card-action\">\r\n                                <NavLink to={'/exam/questions/' + post.id} key={post.id}>\r\n                                    <span className=\"indigo-text darken-4\">Detalles</span>\r\n                                </NavLink>\r\n                                <a className=\"btn-floating btn-small right waves-effect waves-light red\" onClick={(e) => {this.clickDeleteExam(e, post.id)}}>\r\n                                    <i class=\"material-icons\">delete</i>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            });\r\n        } else {\r\n            return (\r\n                <div className=\"preloader-background\">\r\n                    <div className=\"preloader-wrapper big active\">\r\n                    <div className=\"spinner-layer spinner-blue-only\">\r\n                    <div className=\"circle-clipper left\">\r\n                        <div className=\"circle\"></div>\r\n                    </div><div className=\"gap-patch\">\r\n                        <div className=\"circle\"></div>\r\n                    </div><div className=\"circle-clipper right\">\r\n                        <div className=\"circle\"></div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"container\">\r\n                <div className=\"row\">\r\n                    {this.renderPosts()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { posts: state.posts };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchExams, sendExamData, deleteExam })(Exams);","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    fetchSubjects,\r\n    createExam\r\n} from '../../store/actions/index';\r\n\r\nclass NewExam extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchSubjects();\r\n    }\r\n\r\n    renderField(field) {\r\n        return (\r\n            <div className=\"input-field\">\r\n                <label>{field.label}</label>\r\n                <input\r\n                    type=\"text\"\r\n                    {...field.input}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit(values) {\r\n        const body =  {\r\n            exam:{\r\n                subject_id: document.getElementById(\"item\").value,\r\n                name: values.nombre,\r\n                institution: values.institut,\r\n                professor: values.profesor\r\n            }\r\n        };\r\n        this.props.createExam(body, () => {\r\n            this.props.history.push('/exams');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit, posts } = this.props;\r\n        return (\r\n            <div className= \"container\">\r\n                <form className = \"white\" onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n                    <div className=\"section\">\r\n                        <h5 className = \"grey-text text-darken-4\">Crear examen</h5>\r\n                        <Field label=\"Nombre del examen\" name=\"nombre\" component={this.renderField}/>\r\n                        <Field label=\"Institucion\" name=\"institut\" component={this.renderField}/>\r\n                        <Field label=\"Profesor\" name=\"profesor\" component={this.renderField}/>\r\n                        <select className='browser-default' id=\"item\">\r\n                            {_.map(posts, function (option) {\r\n                                return (\r\n                                <option value={option.id} key={option.id}>{option.text}</option>\r\n                                );\r\n                            })}\r\n                        </select>\r\n                        {/*\r\n                        <Field label=\"Nombre Alumno\" name=\"nombreAlumno\" component={this.renderField}/>\r\n                        */}\r\n                    </div>\r\n                    <button className = \"btn pink lighten-1 z-depth-0\" type=\"submit\">Crear</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction validate(values) {\r\n    const errors = {};\r\n    return errors;\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        posts: state.posts\r\n    };\r\n}\r\n\r\nexport default reduxForm({\r\n    validate,\r\n    form: 'PostNewExam'\r\n})(\r\n    connect(mapStateToProps, {fetchSubjects, createExam})(NewExam)\r\n);","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { createQuestion, fetchSubjects } from '../../store/actions';\r\n\r\nclass Question extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            Choice:true,\r\n            Open:false,\r\n            TrueFalse: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchSubjects();\r\n    }\r\n     \r\n    renderTextField(field) {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label>{field.label}</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    {...field.input}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderRadioField(field) {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <p>\r\n                    <label>\r\n                        <input id={field.label + \"True\"}\r\n                            type=\"radio\"\r\n                            {...field.input}\r\n                        />\r\n                        <span>\r\n                            <textarea id={field.label} className=\"materialize-textarea\"/>\r\n                        </span>\r\n                    </label>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    operation(){\r\n        if(document.getElementById(\"Dropdown\").value == 1){\r\n            this.setState({\r\n                Choice:true,\r\n                Open:false,\r\n                TrueFalse: false\r\n            })\r\n        }\r\n        if(document.getElementById(\"Dropdown\").value == 2){\r\n            this.setState({\r\n                Choice:false,\r\n                Open:true,\r\n                TrueFalse: false\r\n            })\r\n        }\r\n        if(document.getElementById(\"Dropdown\").value == 3){\r\n            this.setState({\r\n                Choice:false,\r\n                Open:false,\r\n                TrueFalse: true\r\n            })\r\n        }\r\n    }\r\n\r\n    // TODO onSubmit()\r\n\r\n    onSubmit(values) {\r\n        if(document.getElementById(\"Dropdown\").value == 1){\r\n            const body = {\r\n                subject_id: document.getElementById(\"item\").value,\r\n                name: values.nombre,\r\n                text: values.pregunta,\r\n                tipo: document.getElementById(\"Dropdown\").value,\r\n                equation: values.ecuacion,\r\n                \"variables\":[\r\n                    {\r\n                        \"name\": values.Variable1,\r\n                        \"high_num\": values.Max,\r\n                        \"low_num\": values.Min                    \r\n                    }\r\n                ],\r\n                \"answers_attributes\":[\r\n                    {\r\n                        \"correct\": document.getElementById(\"op1True\").value,\r\n                        \"tipo\": document.getElementById(\"Dropdown\").value,\r\n                        \"text\": document.getElementById(\"op1\").value,\r\n                    },\r\n                    {\r\n                        \"correct\": document.getElementById(\"op2True\").value,\r\n                        \"tipo\": document.getElementById(\"Dropdown\").value,\r\n                        \"text\": document.getElementById(\"op2\").value,\r\n                    },\r\n                    {\r\n                        \"correct\": document.getElementById(\"op3True\").value,\r\n                        \"tipo\": document.getElementById(\"Dropdown\").value,\r\n                        \"text\": document.getElementById(\"op3\").value,\r\n                    },                 \r\n                    {\r\n                        \"correct\": document.getElementById(\"op4True\").value,\r\n                        \"tipo\": document.getElementById(\"Dropdown\").value,\r\n                        \"text\": document.getElementById(\"op4\").value,\r\n                    }\r\n                ]\r\n            };\r\n            this.props.createQuestion(body);\r\n        }\r\n        if (document.getElementById(\"Dropdown\").value == 2){\r\n            const body2 = {\r\n                question:{\r\n                    subject_id: document.getElementById(\"item\").value,\r\n                    name: values.nombre,\r\n                    text: values.pregunta,\r\n                    tipo: document.getElementById(\"Dropdown\").value,\r\n                    \"answers_attributes\":[\r\n                        {\r\n                            \"correct\": true,\r\n                            \"tipo\": document.getElementById(\"Dropdown\").value,\r\n                            \"text\": values.correcta,\r\n                        }\r\n                    ]\r\n                }\r\n            };\r\n            this.props.createQuestion(body2);\r\n        }\r\n        if (document.getElementById(\"Dropdown\").value == 3){\r\n            const body3 = {\r\n                question:{\r\n                    subject_id: document.getElementById(\"item\").value,\r\n                    name: values.nombre,\r\n                    text: values.pregunta,\r\n                    tipo: document.getElementById(\"Dropdown\").value,\r\n                    \"answers_attributes\":[\r\n                        {\r\n                            \"correct\": document.getElementById(\"Verdadero\").checked,\r\n                            \"tipo\": document.getElementById(\"Dropdown\").value,\r\n                            \"text\": document.getElementById(\"Verdadero\").checked,\r\n                        }\r\n                    ]\r\n                }\r\n            };\r\n            this.props.createQuestion(body3);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit, posts } = this.props;\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={ handleSubmit(this.onSubmit.bind(this)) }>\r\n                    <Field label=\"Nombre\" name=\"nombre\" component={this.renderTextField} type=\"text\"/>\r\n                    <div>\r\n                        <label>Materia</label>\r\n                        <select className='browser-default' id=\"item\">\r\n                                {_.map(posts, function (option) {\r\n                                    return (\r\n                                    <option value={option.id} key={option.id}>{option.text}</option>\r\n                                    );\r\n                                })}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label>Tipo de Pregunta</label>\r\n                        <select id=\"Dropdown\" onChange={() => this.operation()} class=\"browser-default\" >\r\n                            <option value=\"1\">Opcion Multiples</option>\r\n                            <option value=\"2\">Abiertas</option>\r\n                            <option value=\"3\">Verdadero o Falsos</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label>Pregunta</label>\r\n                        <div>\r\n                            <Field label=\"Tema\" name=\"pregunta\" component=\"textarea\" type=\"text\"/>\r\n                        </div>\r\n                    </div>\r\n                        {   this.state.Choice?\r\n                            <div>\r\n                                <label>Ecuación</label>\r\n                                <Field label=\"Ecuación\" name=\"ecuacion\" component=\"textarea\" type=\"text\"/>\r\n                                <Field label=\"Valor Minimo de Variable\" name=\"Min\" component={this.renderTextField} type=\"text\"/>\r\n                                <Field label=\"Valor Maximo de Variable\" name=\"Max\" component={this.renderTextField} type=\"text\"/> \r\n                                <Field label=\"Nombre de Variable\" name=\"Variable1\" component={this.renderTextField} type=\"text\"/> \r\n                                <label>Respuestas</label>  \r\n                                <Field label=\"op1\" name=\"group\" component={this.renderRadioField} type=\"radio\"/>\r\n                                <Field label=\"op2\" name=\"group\" component={this.renderRadioField} type=\"radio\"/>\r\n                                <Field label=\"op3\" name=\"group\" component={this.renderRadioField} type=\"radio\"/>\r\n                                <Field label=\"op4\" name=\"group\" component={this.renderRadioField} type=\"radio\"/>  \r\n                            </div>\r\n                            :null                          \r\n                        }\r\n\r\n                        {\r\n                            this.state.TrueFalse?\r\n                            <div class=\"switch\">\r\n                                <label>\r\n                                Falso\r\n                                <input id=\"Verdadero\" type=\"checkbox\" />\r\n                                <span class=\"lever\"></span>\r\n                                Verdadero\r\n                                </label>\r\n                            </div>\r\n                            :null\r\n                        }\r\n\r\n                        { this.state.Open?\r\n                            <Field label=\"Respuesta Correcta\" name=\"correcta\" component={this.renderTextField} type=\"text\"/>\r\n                            :null\r\n                        }\r\n\r\n                    <button className=\"btn btn-primary\" type = \"submit\">Guardar</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction validate(values) {\r\n    const errors = {};\r\n    return errors;\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        posts: state.posts\r\n    };\r\n}\r\n\r\nexport default reduxForm({\r\n    validate,\r\n    form: 'PostQuestionForm'\r\n})(\r\n    connect(mapStateToProps, {fetchSubjects, createQuestion})(Question)\r\n);","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport {fetchSubjects } from '../../store/actions';\r\n\r\nclass EditQuestion extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            Choice:true,\r\n            Open:false,\r\n            TrueFalse: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchSubjects();\r\n    }\r\n\r\n    renderTextField(field) {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label>{field.label}</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    {...field.input}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderRadioField(field) {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <p>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            {...field.input}\r\n                        />\r\n                        <span>\r\n                            <textarea id={field.label} className=\"materialize-textarea\"/>\r\n                        </span>\r\n                    </label>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    operation(){\r\n        if(document.getElementById(\"Dropdown\").value === 1){\r\n            this.setState({\r\n                Choice:true,\r\n                Open:false,\r\n                TrueFalse: false\r\n            })\r\n        }\r\n        if(document.getElementById(\"Dropdown\").value === 2){\r\n            this.setState({\r\n                Choice:false,\r\n                Open:true,\r\n                TrueFalse: false\r\n            })\r\n        }\r\n        if(document.getElementById(\"Dropdown\").value === 3){\r\n            this.setState({\r\n                Choice:false,\r\n                Open:false,\r\n                TrueFalse: true\r\n            })\r\n        }\r\n    }\r\n\r\n    // TODO onSubmit()\r\n\r\n    render() {\r\n        const { handleSubmit, qdata, posts } = this.props;\r\n        console.log(\"in edit quesiton\", qdata);\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={ handleSubmit }>\r\n                    <div className=\"fields\">\r\n                        <Field label=\"Tema\" name=\"tema\" component={this.renderTextField} type=\"text\"/>\r\n                    </div>\r\n                        <Field label=\"Nombre\" name=\"nombre\" component={this.renderTextField} type=\"text\"/>\r\n                        <Field label=\"Tema\" name=\"descripcion\" component={this.renderTextField} type=\"text\"/>\r\n                    <div>\r\n                        <label>Materia</label>\r\n                        <select className='browser-default' id=\"item\">\r\n                                {_.map(posts, function (option) {\r\n                                    return (\r\n                                    <option value={option.id} key={option.id}>{option.text}</option>\r\n                                    );\r\n                                })}\r\n                        </select>\r\n                    </div>\r\n                        <div>\r\n                            <label>Pregunta</label>\r\n                            <div>\r\n                                <Field label=\"Tema\" name=\"pregunta\" component=\"textarea\" type=\"text\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label>Tipo de Pregunta</label>\r\n                            <select id=\"Dropdown\" onChange={() => this.operation()} className=\"browser-default\" >\r\n                                <option value=\"1\">Opcion Multiples</option>\r\n                                <option value=\"2\">Abiertas</option>\r\n                                <option value=\"3\">Verdadero o Falsos</option>\r\n                            </select>\r\n                        </div>\r\n                        <label>Respuestas</label>\r\n                        {   this.state.Choice?\r\n                            <div>\r\n                                <Field label=\"Valor Minimo de Variable\" name=\"Min\" component={this.renderTextField} type=\"text\"/>\r\n                                <Field label=\"Valor Maximo de Variable\" name=\"Max\" component={this.renderTextField} type=\"text\"/>   \r\n                                <Field label=\"op1\" name=\"group\" component={this.renderRadioField} type=\"text\"/>\r\n                                <Field label=\"op2\" name=\"group\" component={this.renderRadioField} type=\"radio\"/>\r\n                                <Field label=\"op3\" name=\"group\" component={this.renderRadioField} type=\"radio\"/>\r\n                                <Field label=\"op4\" name=\"group\" component={this.renderRadioField} type=\"radio\"/>  \r\n                            </div>\r\n                            :null                          \r\n                        }\r\n\r\n                        {\r\n                            this.state.TrueFalse?\r\n                            <div className=\"switch\">\r\n                                <label>\r\n                                Falso\r\n                                <input type=\"checkbox\" />\r\n                                <span className=\"lever\"></span>\r\n                                Verdadero\r\n                                </label>\r\n                            </div>\r\n                            :null\r\n                        }\r\n\r\n                        { this.state.Open?\r\n                            <Field label=\"Respuesta Correcta\" name=\"Correcta\" component={this.renderTextField} type=\"text\"/>\r\n                            :null\r\n                        }\r\n\r\n                    <button className=\"btn btn-primary\" type = \"submit\">Guardar</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction validate(values) {\r\n    const errors = {};\r\n    return errors;\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        qdata: state.data\r\n    };\r\n}\r\n\r\nexport default reduxForm({\r\n    validate,\r\n    form: 'EditQuestionForm',\r\n    initialValues: {\r\n            tema: \"myFirstName\"\r\n      }\r\n})(\r\n    connect(mapStateToProps, {fetchSubjects})(EditQuestion)\r\n);","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchSubject, updateExam } from '../../store/actions/index';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { sendQuestionData } from '../../store/actions/dataActions';\r\n\r\nclass EditExam extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        const checked_questions = [];\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(this.props.data.subject_id)\r\n        this.props.fetchSubject(this.props.data.subject_id);\r\n    }\r\n\r\n    onChange(question_id, event) {\r\n        const options = this.props.options;\r\n        let index;\r\n        if (event.target.checked) {\r\n            const elem = {\"id\": question_id};\r\n            options.push(elem);\r\n        } else {\r\n            index = options.indexOf(question_id);\r\n            options.splice(index, 1);\r\n        }\r\n        //console.log(\"options\", options)\r\n        this.checked_questions = options;\r\n    }\r\n\r\n    renderCheckbox(field) {\r\n        return (\r\n            <p>\r\n                <label>\r\n                    <input type=\"checkbox\" onChange = {this.onChange.bind(this, field.input.name)} />\r\n                    <span>Agregar</span>\r\n                </label>\r\n            </p>\r\n        );\r\n    }\r\n\r\n    renderQuestions() {\r\n        const { questions } = this.props.posts;\r\n        if (questions) {\r\n            return _.map(questions, question => {\r\n                return (\r\n                    <div className=\"col m8\" key={question.id}>\r\n                        <div className=\"card horizontal\">\r\n                            <div className=\"card-image\">\r\n                                <img src=\"https://cdn2.iconfinder.com/data/icons/leto-blue-school-education/64/__education_exam_tests_questions-128.png\"/>\r\n                            </div>\r\n                            <div className=\"card-stacked\">\r\n                                <div className=\"card-content\">\r\n                                    <p>{question.text}</p>\r\n                                </div>\r\n                                <div className=\"card-action\">\r\n                                    <Field name={question.id} id={question.id} component={this.renderCheckbox.bind(this)} type=\"checkbox\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    onSubmit(values) {\r\n        const body =  {\r\n            exam:{\r\n                name: values.name,\r\n                institution: values.institution,\r\n                professor: values.professor\r\n            },\r\n            questions: this.checked_questions\r\n        };\r\n        this.props.updateExam(body, this.props.data.id, () => {\r\n            this.props.history.push('/exams');\r\n        });\r\n        // console.log(\"body\", body)\r\n        // console.log(\"props\", this.props.data);\r\n        //this.props.createExam(body);\r\n        //console.log(\"results\", values);\r\n        // console.log(\"lauch\", this.checked_questions);\r\n    }\r\n\r\n    renderField(field) {\r\n        return (\r\n            <div className=\"input-field\">\r\n                <input\r\n                    type=\"text\"\r\n                    {...field.input}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit } = this.props;\r\n        return (\r\n            <div className= \"container\">\r\n                <form className = \"white\" onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n                    <div className=\"section\">\r\n                        <h5 className = \"grey-text text-darken-4\">Crear examen</h5>\r\n                        <Field label=\"Nombre del examen\" name=\"name\" component={this.renderField}/>\r\n                        <Field label=\"Institucion\" name=\"institution\" component={this.renderField}/>\r\n                        <Field label=\"Profesor\" name=\"professor\" component={this.renderField}/>\r\n                        <div className=\"row\">\r\n                            {this.renderQuestions()}\r\n                        </div>\r\n                    </div>\r\n                    <button className = \"btn pink lighten-1 z-depth-0\" type=\"submit\">Crear</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction validate(values) {\r\n    const errors = {};\r\n    return errors;\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        data: state.data,\r\n        posts: state.posts,\r\n        initialValues: {\r\n            name: state.data.name,\r\n            institution: state.data.institution,\r\n            professor: state.data.professor\r\n        },\r\n        options: []\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchSubject, sendQuestionData, updateExam }\r\n)(reduxForm({\r\n    form: 'EditExamForm',\r\n    validate,\r\n    enableReinitialize : true\r\n})(EditExam));","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchExam } from '../../store/actions/index';\r\nimport { Collapsible, CollapsibleItem } from 'react-materialize'\r\n\r\nclass ExamQuestions extends Component {\r\n\r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n        // console.log(\"in did mount\", params.id);\r\n        this.props.fetchExam(params.id);\r\n    }\r\n\r\n    renderQuestions() {\r\n        const { posts } = this.props;\r\n        if(posts) {\r\n            return _.map(posts, post => {\r\n                return (\r\n                    <CollapsibleItem header={post.name} icon='description'> \r\n                        {post.text}\r\n                    </CollapsibleItem>\r\n                );\r\n            });\r\n        } else {\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"container white\">\r\n                <form className = \"white\" >\r\n                    <Collapsible>\r\n                        {this.renderQuestions()}\r\n                    </Collapsible>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        posts: state.posts\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchExam })(ExamQuestions);","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { fetchQuestions, createSubject, deleteQuestion } from '../../store/actions/index';\r\nimport { sendQuestionData } from '../../store/actions/dataActions';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass ListQuestions extends Component {\r\n    \r\n    componentDidMount() {\r\n       this.props.fetchQuestions();\r\n    }\r\n\r\n    sendQuestion(e, question) {\r\n        //console.log(\"q\",question)\r\n        this.props.sendQuestionData(question);\r\n        this.props.history.push('/question/edit');\r\n    }\r\n\r\n    renderField(field) {\r\n        return (\r\n            <div className=\"input-field\">\r\n                <label>{field.label}</label>\r\n                <input\r\n                    type=\"text\"\r\n                    {...field.input}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    clickDelete(e, question) {\r\n        this.props.deleteQuestion(question, () => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    renderAllQuestions() {\r\n        const { posts } = this.props;\r\n        if (posts) {\r\n            return _.map(posts, post => {\r\n                return (\r\n                    <div className=\"card horizontal\">\r\n                        <div className=\"card-image\">\r\n                            <img src=\"https://cdn2.iconfinder.com/data/icons/leto-blue-school-education/64/__education_exam_tests_questions-128.png\"/>\r\n                        </div>\r\n                        <div className=\"card-stacked\">\r\n                        <div className=\"card-content\">\r\n                            <span className=\"card-title\">{post.name}</span>\r\n                            <p>{post.text}</p>\r\n                        </div>\r\n                        <div className=\"card-action\">\r\n                            <button onClick={(e) => {this.sendQuestion(e, post)}}>Edit</button>\r\n                            <a className=\"btn-floating right waves-effect waves-light red\" onClick={(e) => {this.clickDelete(e, post.id)}}>\r\n                                <i className=\"material-icons\">delete</i>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    onSubmit(values) {\r\n        const body =  {\r\n            subject: {\r\n                text: values.subject\r\n            }\r\n        }\r\n        // this.props.createExam(body);\r\n        // console.log(body);\r\n        this.props.createSubject(body, () => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit } = this.props;\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n                    <div className=\"section\">\r\n                        <h3>Agregar Materia</h3>\r\n                        <Field label=\"Materia\" name=\"subject\" component={this.renderField}/>\r\n                        <button className = \"btn pink lighten-1 z-depth-0\" type=\"submit\">Crear</button>\r\n                    </div>\r\n                    <div className=\"col s12 m7\">\r\n                        <h3>Preguntas</h3>\r\n                        {this.renderAllQuestions()}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction validate(values) {\r\n    const errors = {};\r\n    return errors;\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        posts: state.posts\r\n    };\r\n}\r\n\r\nexport default reduxForm({\r\n    validate,\r\n    form: 'SendSubject'\r\n})(\r\n    connect(mapStateToProps, {fetchQuestions, sendQuestionData, createSubject, deleteQuestion})(ListQuestions)\r\n);","import React, { Component } from 'react';\r\nimport Navbar from './components/layout/Navbar';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from './components/dashboard/Home';\r\nimport Exams from './components/dashboard/ViewExams';\r\nimport NewExam from './components/exams/NewExam';\r\nimport Question from './components/exams/Question';\r\nimport EditQuestion from './components/exams/EditQuestion';\r\nimport EditExam from './components/exams/EditExam';\r\nimport ExamQuestions from './components/exams/ExamQuestions';\r\nimport ListQuestions from './components/exams/ListQuestions';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <header>\r\n            <Navbar />\r\n          </header>\r\n          <main>\r\n            <Switch>\r\n              <Route path='/exams' component = {Exams} />\r\n              <Route path='/newexam' component = {NewExam} />\r\n              <Route path='/exam/edit' component = {EditExam} />\r\n              <Route path='/exam/questions/:id' component = {ExamQuestions} />\r\n              <Route path='/question/edit' component = {EditQuestion} />\r\n              <Route path='/question/list' component = {ListQuestions} />\r\n              <Route exact path='/question' component = {Question} />\r\n              <Route exact path='/' component = {Home}/>\r\n            </Switch>\r\n          </main>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promise from 'redux-promise';\r\nimport reducers from './store/reducers';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider store={createStoreWithMiddleware(reducers)}>\r\n        <App />\r\n    </Provider>\r\n    ,document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}